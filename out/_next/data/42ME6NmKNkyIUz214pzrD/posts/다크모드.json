{"pageProps":{"post":{"title":"다크모드","date":"2021-02-17T00:00:00.000Z","content":"<p><img src=\"../assets/%EB%8B%A4%ED%81%AC%EB%AA%A8%EB%93%9C/2dBw3e0xPpK37MzJ9pci2OySJiHhQCNY1RIHAYkJ5PBbBzApRNkbOgV0RCzsJw0VOOiiBxyoIc_QhbRxGiTw-DgHVc1-_NWaFJ0C=w1064-v0\" alt=\"App screen transitioning from a light to a dark theme.\"></p>\n<h2>1. 다크모드란?</h2>\n<ul>\n<li>\n<p>어두운 색상을 기본 배경색으로 하는 저조도의 사용자 인터페이스 디자인입니다.</p>\n</li>\n<li>\n<p>macOS Mojave, Window10, iOS 13, Android 10 과 같은 대표적인 PC·모바일 운영체제에서 다크모드를 지원하고 있고, 일관성 있는 사용자 경험을 위해 웹 서비스 또한 다크모드를 지원하는 것이 필수적인 기능처럼 여겨지고 있습니다.</p>\n</li>\n<li>\n<p>장점으로는 눈의 피로도를 낮추고 컨텐츠에 집중하게 해 사용자 경험을 높일 수 있는 것으로 알려져 있습니다.</p>\n</li>\n<li>\n<p>다크모드의 기능적인 부분에 대해서는 논란이 있지만, 시스템과의 일관성 및 새로운 디자인 경험을 제공한다는 점에서 트렌드를 넘어 표준이 되어가고 있는 것처럼 보입니다.</p>\n<blockquote>\n<p>어두운 곳에서는 눈부심을 줄여주는 효과가 있지만, 전반적인 가독성 면에서는 다크모드보다 기존의 밝은 배경이 더 유리하다고 합니다. 아래 기사를 읽어보는 것을 추천합니다.</p>\n<ul>\n<li><a href=\"https://www.news1.kr/articles/?3638463\">뉴스1 - 구글 이어 애플도 찜한 '다크모드' ... 정말 눈에 좋을까?</a></li>\n<li><a href=\"https://byline.network/2019/06/07-10/\">바이라인 네트워크 - 다크모드의 등장은 애플의 디자인 역사에서 나온 것이다</a></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2>2. 시스템 테마 감지하기</h2>\n<ul>\n<li>다크모드 지원에서 중요한 점은 사용자 경험에 일관성을 제공하는 것입니다.</li>\n<li>이를 위해 사용자 시스템의 컬러 테마를 확인하고, 이에 맞추어 테마를 적용할 수 있어야 합니다.</li>\n</ul>\n<h3>2-1. CSS 미디어 쿼리: prefers-color-scheme</h3>\n<ul>\n<li>\n<p>CSS의 <code>prefers-color-scheme</code> 미디어 쿼리를 이용해 사용자 시스템의 테마를 감지하고, 선택적으로 스타일을 적용할 수 있습니다.</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">prefers-color-scheme</span><span class=\"token punctuation\">:</span> dark<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span><span class=\"token punctuation\">;</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n        ...\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p><code>light(default)</code>또는 <code>dark</code> 두 개의 값만을 가집니다.</p>\n</li>\n<li>\n<p>초기에는 <code>no-preference</code> 값이 default였으나, 폐기(deprecated) 되었습니다.</p>\n</li>\n<li>\n<p>인터넷 익스플로러와 파이어폭스 안드로이드를 제외한 모든 브라우저에서 지원합니다.</p>\n<p><img src=\"../assets/%EB%8B%A4%ED%81%AC%EB%AA%A8%EB%93%9C/image-20210217134905043.png\" alt=\"image-20210217134905043\"></p>\n<blockquote>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/@media/prefers-color-scheme\">MDN - prefers-color-scheme</a></li>\n<li><a href=\"https://drafts.csswg.org/mediaqueries-5/#descdef-media-prefers-color-scheme\">CSSWG - mediaqueries 5 draft</a></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h2>3. 테마 전환하기</h2>\n<ul>\n<li>위와 같이 CSS 미디어 쿼리를 이용하면 사용자의 현재 테마를 감지하고 그에 맞는 스타일을 적용할 수 있으나, 원하는 테마로 전환할 수는 없습니다.</li>\n<li>많은 서비스처럼 토글 버튼을 이용해 테마를 전환하기 위해서는 자바스크립트에서 이를 조작할 수 있어야 합니다.</li>\n</ul>\n<h3>3-1. 시스템 테마 감지하기: Window.matchMedia()</h3>\n<ul>\n<li>\n<p><code>Window.matchMedia()</code> 메서드를 이용하면 CSS의 미디어 쿼리를 자바스크립트에서 접근할 수 있습니다.</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* MediaQueryList </span>\n<span class=\"token comment\">\tmatches: false</span>\n<span class=\"token comment\">\tmedia: \"(prefers-color-scheme: dark)\"</span>\n<span class=\"token comment\">\tonchange: null</span>\n<span class=\"token comment\">*/</span>\n</code></pre></div>\n</li>\n<li>\n<p>함수를 실행하면 <code>MediaQueryList</code> 객체를 반환하며, 다음과 같은 프로퍼티를 가지고 있습니다.</p>\n<ul>\n<li><code>matches</code>    : 쿼리와의 일치 여부</li>\n<li><code>media</code>        : 쿼리의 <code>DOMString</code> 표현. 쿼리의 내용을 문자열로 접근 가능</li>\n<li><code>onchange</code> : 쿼리 상태 변화 시의 콜백 함수\r\n<code>addListener()</code> 및 <code>removeListener()</code> 메서드로 등록 및 삭제 가능</li>\n</ul>\n</li>\n<li>\n<p><code>MediaQueryList.matches</code> 를 이용해 일치 여부를 판단하고 스타일을 적용할 수 있습니다.</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">matchMedia</span><span class=\"token punctuation\">(</span><span class=\"token string\">'(prefers-color-scheme: dark)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">matches</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">body</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">classList</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dark'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span> <span class=\"token spread operator\">...</span> <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<blockquote>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/Window/matchMedia\">MDN - Window.matchMedia()</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\">MDN - MediaQueryList</a></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n<h3>3-2. 다크모드 테마 적용하기</h3>\n<ul>\n<li>\n<p>위의 <code>Window.matchMedia()</code>를 이용해 시스템 테마를 감지해 상태값으로 저장하고, 이후 버튼을 토글하여 테마를 전환할 수 있습니다.</p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/Using_CSS_custom_properties\">CSS 변수</a>와 CSS <code>var()</code> 함수를 이용하면 스타일시트를 복잡하게 작성하지 않아도 쉽게 테마를 전환할 수 있습니다.</p>\n<div class=\"remark-highlight\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body<span class=\"token class\">.light</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">--main-bg-color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--main-text-color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body<span class=\"token class\">.dark</span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">--main-bg-color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">black</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">--main-text-color</span><span class=\"token punctuation\">:</span> <span class=\"token color\">white</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token comment\">/* 두 번째의 선택적 인수는 지정 속성이 유효하지 않을 때의 대체값입니다 */</span>  \n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--main-bg-color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">--main-text-color</span><span class=\"token punctuation\">,</span> <span class=\"token color\">black</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span><span class=\"token unit\">ms</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p><code>var()</code> 에서 유효하지 않은 값을 받으면 두 번째 인수의 대체값을 사용하거나, 초기값 또는 상속값을 사용합니다.</p>\n</li>\n<li>\n<p><code>transition</code> 프로퍼티를 지정하여 전환을 부드럽게 만들 수 있습니다.</p>\n</li>\n<li>\n<p>인터넷 익스플로러를 제외한 모든 브라우저에서 지원하고 있습니다.</p>\n<p><img src=\"../assets/%EB%8B%A4%ED%81%AC%EB%AA%A8%EB%93%9C/image-20210217154149125.png\" alt=\"image-20210217154149125\"></p>\n<blockquote>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/Using_CSS_custom_properties\">MDN - 사용자 지정 CSS 속성 사용하기</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/CSS/var()\">CSS var() 함수</a></li>\n</ul>\n</blockquote>\n</li>\n</ul>\n","slug":"다크모드"}},"__N_SSG":true}